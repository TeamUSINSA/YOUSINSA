<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.user.inquiry">

    <!-- 전체 문의 조회 (최신순) -->
    <select id="selectAll" resultType="dto.user.Inquiry">
        SELECT * FROM inquiry ORDER BY question_date DESC
    </select>

    <!-- 전체 문의 조회 -->
    <select id="findAll" resultType="dto.user.Inquiry">
        SELECT * FROM inquiry
    </select>

    <!-- 문의 답변 업데이트 -->
    <update id="updateInquiryAnswer" parameterType="map">
        UPDATE inquiry
        SET answer = #{answer}, status = #{status}
        WHERE inquiry_id = #{inquiryId}
    </update>

    <!-- 상태로 문의 조회 -->
    <select id="selectByStatus" parameterType="String" resultType="dto.user.Inquiry">
        SELECT * FROM inquiry
        WHERE status LIKE CONCAT('%', #{status}, '%')
    </select>

    <!-- 특정 상품의 문의 목록 조회 -->
    <select id="selectByProductId" parameterType="int" resultType="dto.user.Inquiry">
        SELECT
            inquiry_id    AS inquiryId,
            title,
            content,
            image,
            answer,
            user_id       AS userId,
            product_id    AS productId,
            question_date AS questionDate,
            status
        FROM inquiry
        WHERE product_id = #{productId}
        ORDER BY question_date DESC
    </select>

    <!-- 새 문의 등록 -->
    <insert id="insertInquiry" parameterType="dto.user.Inquiry" useGeneratedKeys="true" keyProperty="inquiryId">
        INSERT INTO inquiry
            (title, content, image, user_id, product_id, question_date, status, type)
        VALUES
            (#{title}, #{content}, #{image}, #{userId}, #{productId}, NOW(), #{status}, #{type})
    </insert>

<!-- 사용자 쿼리 -->
	<!-- 사용자 1:1 문의 목록 조회 -->
	 <select id="selectByUserId"
          parameterType="map"
          resultType="inquiry">
     SELECT 
      inquiry_id    AS inquiryId,
      title,
      content,
      answer,
      image,
      user_id       AS userId,
      type,
      status,
      question_date AS questionDate,
      product_id    AS productId
    FROM inquiry
   WHERE user_id = #{userId}
   ORDER BY question_date DESC
   LIMIT #{limit} OFFSET #{offset}
  </select>
  
  <!-- 전체 건수 조회 (페이징 계산용) -->
  <select id="countByUserId" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM inquiry
     WHERE user_id = #{userId}
  </select>
  
  <!-- 단건 조회 (수정 폼용) -->
  <select id="selectById" parameterType="map" resultType="inquiry">
    SELECT
      inquiry_id    AS inquiryId,
      title,
      content,
      answer,
      image,
      user_id       AS userId,
      type,
      status,
      question_date AS questionDate,
      product_id    AS productId
    FROM inquiry
    WHERE inquiry_id = #{inquiryId}
      AND user_id = #{userId}
  </select>
  
  <!-- 1-2. 사용자문의 수정 -->
  <update id="updateByUser" parameterType="inquiry">
    UPDATE inquiry
    SET title   = #{title},
        content = #{content}
    WHERE inquiry_id = #{inquiryId}
      AND user_id    = #{userId}
  </update>

  <!-- 1-3. 사용자문의 삭제 -->
  <delete id="deleteByUser" parameterType="map">
    DELETE FROM inquiry
    WHERE inquiry_id = #{inquiryId}
      AND user_id    = #{userId}
  </delete>
  
  <select id="getUserIdByInquiryId" parameterType="int" resultType="string">
  SELECT user_id
  FROM inquiry
  WHERE inquiry_id = #{inquiryId}
</select>
</mapper>
