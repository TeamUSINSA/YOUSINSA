<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.order">

    <!-- 주문 목록 전체 조회 -->
    <select id="selectAllOrders" resultType="dto.order.OrderList">
        SELECT order_id, user_id, order_date, total_price, delivery_status,
               delivery_request, payment_method,
                receiver_name, receiver_phone, receiver_address
        FROM orderlist
        ORDER BY order_date DESC
    </select>

    <!-- 총 주문 페이지 수 구하기 -->
    <select id="getTotalPages" resultType="int">
        SELECT CEIL(COUNT(*) / 10.0) FROM orderlist
    </select>

    <!-- 주문 + 주문 아이템 매핑 -->
    <resultMap id="orderWithItemsResultMap" type="dto.order.Order">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="totalPrice" column="total_price"/>
        <result property="deliveryStatus" column="delivery_status"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="deliveryRequest" column="delivery_request"/>
        <result property="receiverName" column="receiver_name"/>
        <result property="receiverPhone" column="receiver_phone"/>
        <result property="receiverAddress" column="receiver_address"/>
        <collection property="items" ofType="dto.order.OrderItem">
            <id property="orderItemId" column="order_item_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
            <result property="status" column="item_status"/>
            <result property="color" column="color"/>
            <result property="size" column="size"/>
            <result property="name" column="product_name"/>
            <result property="price" column="price"/>
            <result property="mainImage1" column="main_image1"/>
        </collection>
    </resultMap>

    <!-- 주문리스트 + 아이템 매핑 -->
    <resultMap id="orderListWithItemsResultMap" type="dto.order.OrderList">
        <id property="orderId" column="order_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="totalPrice" column="total_price"/>
        <result property="deliveryStatus" column="delivery_status"/>
        <result property="deliveryRequest" column="delivery_request"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="userId" column="user_id"/>
        <result property="receiverName" column="receiver_name"/>
        <result property="receiverPhone" column="receiver_phone"/>
        <result property="receiverAddress" column="receiver_address"/>
        <result property="usedPoint" column="used_point"/>
        <result property="couponDiscount" column="coupon_discount"/>
        <collection property="items" ofType="dto.order.OrderItem">
            <id property="orderItemId" column="order_item_id"/>
            <result property="productId" column="product_id"/>
            <result property="quantity" column="quantity"/>
            <result property="status" column="status"/>
            <result property="couponId" column="coupon_id"/>
            <result property="color" column="color"/>
            <result property="size" column="size"/>
            <result property="name" column="product_name"/>
            <result property="price" column="price"/>
            <result property="mainImage1" column="main_image1"/>
        </collection>
    </resultMap>

    <!-- 아이디로 주문 + 아이템 조회 -->
    <select id="selectOrderWithItemsByUserId" parameterType="string" resultMap="orderWithItemsResultMap">
        SELECT o.order_id, o.user_id, o.order_date, o.total_price, o.delivery_status,
               i.order_item_id, i.product_id, i.quantity, i.status AS item_status,
               i.color, i.size,
               p.name AS product_name, p.cost AS price, p.main_image1
        FROM orderlist o
        JOIN orderitem i ON o.order_id = i.order_id
        JOIN product p ON i.product_id = p.product_id
        WHERE o.user_id = #{userId}
        ORDER BY o.order_date DESC, i.order_item_id ASC
    </select>

    <!-- 아이디 + 날짜 조건으로 주문 조회 -->
    <select id="selectOrdersByUserAndDate" parameterType="map" resultMap="orderWithItemsResultMap">
        SELECT o.order_id, o.user_id, o.order_date, o.total_price, o.delivery_status,
               i.order_item_id, i.product_id, i.quantity, i.status AS item_status,
               i.color, i.size,
               p.name AS product_name, p.cost AS price, p.main_image1
        FROM orderlist o
        JOIN orderitem i ON o.order_id = i.order_id
        JOIN product p ON i.product_id = p.product_id
        WHERE o.user_id = #{userId}
          AND o.order_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY o.order_date DESC, i.order_item_id ASC
    </select>

    <!-- 특정 기간 동안 주문 조회 -->
    <select id="selectOrderByDateRange" parameterType="map" resultMap="orderWithItemsResultMap">
        SELECT o.order_id, o.user_id, o.order_date, o.total_price, o.delivery_status,
               i.order_item_id, i.product_id, i.quantity, i.status AS item_status,
               i.color, i.size,
               p.name AS product_name, p.cost AS price, p.main_image1
        FROM orderlist o
        JOIN orderitem i ON o.order_id = i.order_id
        JOIN product p ON i.product_id = p.product_id
        WHERE o.user_id = #{userId}
          AND o.order_date BETWEEN #{startDate} AND #{endDate}
          AND delivery_status NOT IN ('취소완료', '반품완료')
        ORDER BY o.order_date DESC, i.order_item_id ASC
    </select>

    <!-- 주문 상세 조회 (아이디 기준) -->
    <select id="getOrderDetailById" parameterType="int" resultMap="orderListWithItemsResultMap">
        SELECT o.order_id, o.order_date, o.total_price, o.delivery_status,
               o.delivery_request, o.payment_method, o.user_id,
               o.receiver_name, o.receiver_phone, o.receiver_address,
               o.used_point, o.coupon_discount,
               oi.order_item_id, oi.product_id, oi.quantity, oi.status,
               oi.color, oi.size,
               p.name AS product_name, p.cost AS price, p.main_image1
        FROM orderlist o
        LEFT JOIN orderitem oi ON o.order_id = oi.order_id
        LEFT JOIN product p ON oi.product_id = p.product_id
        WHERE o.order_id = #{orderId}
    </select>

    <!-- 필터 조건으로 주문 조회 -->
    <select id="selectFilteredOrders" parameterType="map" resultType="dto.order.OrderList">
        SELECT * FROM orderlist
        WHERE 1=1
        <if test="userId != null and userId != ''">
            AND user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND delivery_status = #{status}
        </if>
        <if test="period != null and period != ''">
            AND order_date &gt;= DATE_SUB(NOW(), INTERVAL #{period} DAY)
        </if>
        ORDER BY order_date DESC
    </select>

    <!-- 특정 주문아이템 조회 -->
    <select id="selectOrderItemById" parameterType="int" resultType="dto.order.OrderItem">
        SELECT i.*, p.price
        FROM orderitem i
        JOIN product p ON i.product_id = p.product_id
        WHERE i.order_item_id = #{orderItemId}
    </select>

    <!-- 사용자 ID로 주문 목록 조회 -->
    <select id="findOrdersByUserId" parameterType="string" resultType="dto.order.OrderList">
        SELECT order_id, order_date, delivery_status
        FROM orderlist
        WHERE user_id = #{userId}
        ORDER BY order_date DESC
    </select>

    <!-- 쿠폰 사용 여부 업데이트 -->
    <update id="updateUserCouponUsed" parameterType="dto.user.UserCoupon">
        UPDATE usercoupon
        SET used = #{used}
        WHERE user_id = #{userId}
          AND coupon_id = #{couponId}
    </update>

    <!-- findOrderListById (수정완료) -->
    <select id="findOrderListById" parameterType="int" resultType="dto.order.OrderList">
        SELECT order_id, user_id, order_date, total_price, delivery_status,
               delivery_request, payment_method,
                receiver_name, receiver_phone, receiver_address
        FROM orderlist
        WHERE order_id = #{orderId}
    </select>
    
   <select id="selectExchangesByApproved" parameterType="map" resultType="dto.order.Exchange">
  SELECT
    exchange_id AS exchangeId,
    exchange_date AS exchangeDate,
    reason,
    approved,
    user_id AS userId,
    order_item_id AS orderItemId,
    shipping_fee AS shippingFee,
    reject_reason AS rejectReason,
    shipping_fee_paid AS shippingFeePaid,
    size,
    color
  FROM exchange
  <where>
    <if test="status == 'completed'">
      approved = 1
    </if>
    <if test="status == 'pending'">
      approved = 0
    </if>
    <if test="status == 'rejected'">
      approved = 2
    </if>
  </where>
  ORDER BY exchange_date DESC
</select>

</mapper>
